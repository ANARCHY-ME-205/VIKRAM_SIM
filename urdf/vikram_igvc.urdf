<?xml version="1.0"?>
<robot name="vikram">
  <link name="base_link">
    <visual>
      <geometry>
        <mesh filename="package://vikram_sim/meshes/igvc/vikram_model.dae"/>
      </geometry>
      <origin rpy="0 0 3.14" xyz="-0.1 0.6 0.047452"/>
    </visual>
    <collision>
     <geometry>
        <mesh filename="package://vikram_sim/meshes/igvc/vikram_model.dae"/>
      </geometry>
      <origin rpy="0 0 3.14" xyz="-0.1 0.6 0.047452"/>
    </collision>
    <inertial>
      <mass value="10"/>
      <inertia ixx="0.166667" ixy="0.0" ixz="0.0" iyy="0.166667" iyz="0.0" izz="0.166667"/>
    </inertial>
  </link>
  <link name = "perpendicular">
   
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="0.0001 0.00001 0.00001"/>
        </geometry>
      </visual>
      <collision>
        <origin rpy="0 0 -0" xyz="0 0 0"/>
        <geometry>
          <box size="0.0001 0.00001 0.00001"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="0"/>
        <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
      </inertial>
  </link>
  <link name="zed_camera">
      <collision>
        <origin rpy="0 0 1.5707" xyz="-0.015 -0.005 0"/>
        <geometry>
          <mesh filename="package://vikram_sim/meshes/igvc/zed2i.dae"/>
        </geometry>
      </collision>
      <visual>
        <origin rpy="0 0 1.5707" xyz="-0.015 -0.005 0"/>
        <geometry>
          <mesh filename="package://vikram_sim/meshes/igvc/zed2i.dae" scale="1 1 1"/>
        </geometry>
      </visual>
      <inertial>
        <mass value="0.5"/>
        <inertia ixx="0.166667" ixy="0.0" ixz="0.0" iyy="0.166667" iyz="0.0" izz="0.166667"/>
      </inertial>
  </link>

      <gazebo reference="zed_camera">
      <sensor name="camera" type="depth">
        <update_rate>20</update_rate>
        <camera>
          <horizontal_fov>1.047198</horizontal_fov>
          <image>
            <width>640</width>
            <height>640</height>
            <format>B8G8R8</format>
          </image>
          <clip>
            <near>0.05</near>
            <far>100</far>
          </clip>
        </camera>
        <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
          <baseline>0.2</baseline>
          <alwaysOn>true</alwaysOn>
          <!-- Keep this zero, update_rate in the parent <sensor> tag
            will control the frame rate. -->
          <updateRate>0.0</updateRate>
          
          <imageTopicName>camera/color/image_raw</imageTopicName>
          <cameraInfoTopicName>camera/color/camera_info</cameraInfoTopicName>
          <depthImageTopicName>camera/depth/image_raw</depthImageTopicName>
          <depthImageCameraInfoTopicName>camera/depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudTopicName>camera/depth/points</pointCloudTopicName>
          <frameName>perpendicular</frameName>
          <pointCloudCutoff>0.5</pointCloudCutoff>
          <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
          <distortionK1>0</distortionK1>
          <distortionK2>0</distortionK2>
          <distortionK3>0</distortionK3>
          <distortionT1>0</distortionT1>
          <distortionT2>0</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0</Cx>
          <Cy>0</Cy>
          <focalLength>0</focalLength>
          <hackBaseline>0</hackBaseline>
        </plugin>
      </sensor>
      </gazebo>

<link name="wheel1">
<visual>
<geometry>
<mesh filename="package://vikram_sim/meshes/igvc/wheel.dae"/>
</geometry>
<origin rpy ="0 0 0" xyz="0.05 0.047 0"/>
</visual>

<collision>
  <geometry>
    <cylinder radius="0.2" length="0.073987"/>
  </geometry>
  <origin rpy ="1.5707 0 1.5707" xyz="-0 0 0"/>
</collision>

    <inertial>
      <mass value="5"/>
      <inertia ixx="0.166667" ixy="0.0" ixz="0.0" iyy="0.166667" iyz="0.0" izz="0.166667"/>
    </inertial>

</link>
<link name="wheel2">
<visual>
<geometry>
<mesh filename="package://vikram_sim/meshes/igvc/wheel.dae"/>
</geometry>
<origin rpy ="0 0 0" xyz="0.05 0.047 0"/>
</visual>

<collision>
<geometry>
<cylinder radius="0.2" length="0.073987"/>
</geometry>
<origin rpy ="1.5707 0 1.5707" xyz="-0 0 0"/>
</collision>

    <inertial>
      <mass value="5"/>
      <inertia ixx="0.166667" ixy="0.0" ixz="0.0" iyy="0.166667" iyz="0.0" izz="0.166667"/>
    </inertial>

</link>

<link name="castor_ball">
<visual>
<geometry>
<sphere radius="0.05"/>
</geometry>
<origin rpy="0 0 0" xyz="0 0 0"/>
</visual>

<collision>
<geometry>
<sphere radius="0.05"/>
</geometry>
<origin rpy="0 0 0" xyz="0 0 0"/>
</collision>

    <inertial>
      <mass value="3"/>
      <inertia ixx="0.166667" ixy="0.0" ixz="0.0" iyy="0.166667" iyz="0.0" izz="0.166667"/>
    </inertial>

</link>

<link name="castor_cylinder">
<visual>
<geometry>
 <cylinder length="0.03" radius="0.05"/>
</geometry>
<origin rpy="0 0 0" xyz="0 0 0"/>
</visual>

<collision>
<geometry>
 <cylinder length="0.03" radius="0.05"/>
</geometry>
<origin rpy ="0 0 0" xyz="0 0 0"/>
</collision>
    <inertial>
      <mass value="2"/>
      <inertia ixx="0.166667" ixy="0.0" ixz="0.0" iyy="0.166667" iyz="0.0" izz="0.166667"/>
    </inertial>

</link>


 <joint name="body_to_wheel1" type="continuous">
    <parent link="base_link"/>
    <child link="wheel1"/>
	<axis xyz="1 0 0"/>
    <origin rpy ="0 0 1.5707" xyz="-0.019369 -0.35 0"/>
  </joint>
 <joint name="body_to_wheel2" type="continuous">
    <parent link="base_link"/>
    <child link="wheel2"/>
    <axis xyz="-1 0 0"/>
    <origin rpy ="0 0 -1.5707" xyz="-0.019369 0.4 0"/>
  </joint>


 <joint name="body_to_castor_cylinder" type="continuous">
    <parent link="base_link"/>
    <child link="castor_cylinder"/>
    <axis xyz="0 0 1"/>
    <origin rpy ="0 -0.012285 0" xyz="-0.609078 -0.008 -0.1"/>
  </joint>
 <joint name="cylinder_to_castor_ball" type="continuous">
    <parent link="castor_cylinder"/>
    <child link="castor_ball"/>
    <axis xyz="0 1 0"/>
    <origin rpy ="0 0.132544 0" xyz="0 0 -0.065"/>
  </joint>
  <joint name="camera_to_body" type="fixed">
  <parent link="base_link"/>
  <child link="zed_camera"/>
  <origin rpy ="0 0 0" xyz="-0.15 0.025 0.705"/>
  </joint>

  <joint name="perp" type="fixed">
  <parent link="base_link"/>
  <child link="perpendicular"/>
  <origin rpy ="-1.5707 0 -1.5707" xyz="0.15 0 1.58"/>
  </joint>

  <gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

    <!-- Plugin update rate in Hz -->
    <updateRate>100</updateRate>

    <!-- Name of left joint, defaults to `left_joint` -->
    <leftJoint>body_to_wheel2</leftJoint>

    <!-- Name of right joint, defaults to `right_joint` -->
    <rightJoint>body_to_wheel1</rightJoint>

    <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
    <wheelSeparation>0.67336</wheelSeparation>

    <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
    <wheelDiameter>0.4</wheelDiameter>

    <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
    <wheelAcceleration>1.0</wheelAcceleration>

    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
    <wheelTorque>100</wheelTorque>

    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
    <commandTopic>/cmd_vel</commandTopic>

    <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
    <odometryTopic>odom</odometryTopic>

    <!-- Odometry frame, defaults to `odom` -->
    <odometryFrame>odom</odometryFrame>

    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
    <robotBaseFrame>base_footprint</robotBaseFrame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometrySource>1</odometrySource>

    <!-- Set to true to publish transforms for the wheel links, defaults to false -->
    <publishWheelTF>false</publishWheelTF>

    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publishOdom>true</publishOdom>

    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
    <publishWheelJointState>true</publishWheelJointState>

    <!-- Set to true to swap right and left wheels, defaults to true -->
    <legacyMode>false</legacyMode>
  </plugin>
</gazebo>

</robot>
